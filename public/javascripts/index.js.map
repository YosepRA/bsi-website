{"version":3,"file":"index.js","mappings":"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","sources":["webpack://bsi-web-client/webpack/bootstrap","webpack://bsi-web-client/webpack/runtime/define property getters","webpack://bsi-web-client/webpack/runtime/hasOwnProperty shorthand","webpack://bsi-web-client/webpack/runtime/make namespace object","webpack://bsi-web-client/./src/js/scroll-control.js","webpack://bsi-web-client/./src/js/live-price.js","webpack://bsi-web-client/./node_modules/engine.io-parser/build/esm/commons.js","webpack://bsi-web-client/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://bsi-web-client/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://bsi-web-client/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://bsi-web-client/./node_modules/engine.io-parser/build/esm/index.js","webpack://bsi-web-client/./node_modules/@socket.io/component-emitter/index.mjs","webpack://bsi-web-client/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://bsi-web-client/./node_modules/engine.io-client/build/esm/util.js","webpack://bsi-web-client/./node_modules/engine.io-client/build/esm/transport.js","webpack://bsi-web-client/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://bsi-web-client/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://bsi-web-client/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://bsi-web-client/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://bsi-web-client/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://bsi-web-client/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://bsi-web-client/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://bsi-web-client/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://bsi-web-client/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://bsi-web-client/./node_modules/engine.io-client/build/esm/socket.js","webpack://bsi-web-client/./node_modules/engine.io-client/build/esm/index.js","webpack://bsi-web-client/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://bsi-web-client/./node_modules/socket.io-parser/build/esm/binary.js","webpack://bsi-web-client/./node_modules/socket.io-parser/build/esm/index.js","webpack://bsi-web-client/./node_modules/socket.io-client/build/esm/on.js","webpack://bsi-web-client/./node_modules/socket.io-client/build/esm/socket.js","webpack://bsi-web-client/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://bsi-web-client/./node_modules/socket.io-client/build/esm/manager.js","webpack://bsi-web-client/./node_modules/socket.io-client/build/esm/index.js","webpack://bsi-web-client/./node_modules/socket.io-client/build/esm/url.js","webpack://bsi-web-client/./src/js/helpers.js","webpack://bsi-web-client/./src/js/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { throttle } from './helpers.js';\n\n// It will only provide vertical (y) scroll data for now.\nclass ScrollControl {\n  constructor(fns) {\n    this.position = 0;\n    this.direction = '';\n    this.fns = fns || [];\n\n    const handleScroll = throttle(this.updateScroll.bind(this), 300);\n\n    window.addEventListener('scroll', handleScroll);\n  }\n\n  updateScroll() {\n    const newPosition = window.scrollY;\n    const newDirection = newPosition - this.position >= 0 ? 'down' : 'up';\n\n    this.position = newPosition;\n    this.direction = newDirection;\n\n    this.callFunctions();\n  }\n\n  callFunctions() {\n    // Invoke all functions attached to this instance.\n    this.fns.forEach((fn) =>\n      fn({ position: this.position, direction: this.direction }),\n    );\n  }\n}\n\nexport default ScrollControl;\n","const navbarPriceData = document.querySelector('.navbar__price-data');\r\nconst navbarPriceChange = document.querySelector('.navbar__price-change');\r\nconst navbarPriceTime = document.querySelector('.navbar__price-time');\r\n\r\nasync function fetchLatestPrice() {\r\n  const baseUrl = '/api/v1';\r\n\r\n  const data = await fetch(`${baseUrl}/price`).then((res) => res.json());\r\n\r\n  return data;\r\n}\r\n\r\nasync function updatePriceData(data) {\r\n  // const data = await fetchLatestPrice();\r\n  const priceText = `$${data.price}`;\r\n  const changeText = `${data.change24Hr > 0 ? '+' : ''}${\r\n    Math.round(data.change24Hr * 100) / 100\r\n  }%`;\r\n  const timeText = new Date(data.lastUpdatedAt).toLocaleString();\r\n\r\n  navbarPriceData.textContent = priceText;\r\n  navbarPriceChange.textContent = changeText;\r\n  navbarPriceTime.textContent = timeText;\r\n\r\n  // Toggle 24 hour change text color.\r\n  if (data.change24Hr > 0) {\r\n    navbarPriceChange.classList.add('navbar__price-change--up');\r\n    navbarPriceChange.classList.remove('navbar__price-change--down');\r\n  } else {\r\n    navbarPriceChange.classList.add('navbar__price-change--down');\r\n    navbarPriceChange.classList.remove('navbar__price-change--up');\r\n  }\r\n}\r\n\r\nfunction fetchPriceOnInterval(delay) {\r\n  setInterval(async () => {\r\n    const data = await fetchLatestPrice(data);\r\n\r\n    updatePriceData(data);\r\n  }, delay);\r\n}\r\n\r\nexport { fetchLatestPrice, fetchPriceOnInterval, updatePriceData };\r\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","function ready(fn) {\n  if (document.readyState !== 'loading') {\n    fn();\n  } else {\n    document.addEventListener('DOMContentLoaded', fn);\n  }\n}\n\nfunction throttle(fn, delay) {\n  let prev = Date.now();\n\n  return function throttleFunction() {\n    const now = Date.now();\n\n    if (now - prev > delay) {\n      fn();\n\n      prev = now;\n    }\n  };\n}\n\nexport { ready, throttle };\n","import { ready } from './helpers.js';\nimport ScrollControl from './scroll-control.js';\nimport {\n  fetchLatestPrice,\n  updatePriceData,\n  fetchPriceOnInterval,\n} from './live-price.js';\nimport startSocket from './socket.js';\n\nasync function start() {\n  function hello(scrollState) {\n    console.log('We are going:', scrollState.direction);\n  }\n\n  // function world() {\n  //   console.log('world');\n  // }\n\n  // Navbar scroll.\n  const scroll = new ScrollControl([hello]);\n\n  const data = await fetchLatestPrice();\n  const delay = 120000;\n\n  await updatePriceData(data);\n\n  fetchPriceOnInterval(delay);\n\n  // Socket will be disabled on Demo server, or Cyclic.sh server.\n  // startSocket();\n}\n\nready(start);\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","navbarPriceData","document","querySelector","navbarPriceChange","navbarPriceTime","async","fetchLatestPrice","fetch","then","res","json","data","priceText","price","changeText","change24Hr","Math","round","timeText","Date","lastUpdatedAt","toLocaleString","textContent","classList","add","remove","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","result","split","readAsDataURL","supportsBinary","isView","buffer","chars","lookup","Uint8Array","i","length","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","mapBinary","encodedPacket","charAt","substring","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","readyState","socket","onError","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","details","alphabet","map","prev","seed","num","encoded","floor","yeast","now","str","encodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Request","uri","method","undefined","xd","xscheme","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","index","requestsCount","requests","cleanup","fromError","abort","responseText","unloadHandler","attachEvent","nextTick","Promise","resolve","WebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","name","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","schema","secure","port","Number","timestampRequests","timestampParam","b64","encodedQuery","hostname","indexOf","path","polling","location","isSSL","protocol","poll","pause","onPause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","sid","request","assign","req","xhrStatus","pollXhr","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","encode","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","reconstructor","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","fns","position","direction","handleScroll","throttle","updateScroll","newPosition","scrollY","newDirection","callFunctions","scrollState","console","log","setInterval"],"sourceRoot":""}