{"version":3,"file":"index.js","mappings":"mBAAwBA,SAASC,cAAc,uBACrBD,SAASC,cAAc,yBACzBD,SAASC,cAAc,uBC6C/C,QA/CA,MACEC,YAAYC,EAAkB,SAAUC,EAAU,UAChDC,KAAKC,MAAO,EACZD,KAAKE,KAAO,KACZF,KAAKF,gBAAkBA,EACvBE,KAAKD,QAAUA,CACjB,CAEAI,OAAOD,EAAME,EAAc,UACzB,IAAKJ,KAAKC,KAIR,YAHeN,SAASC,cAAc,IAAIQ,KACnCC,SAKT,MAAMC,EAASX,SAASY,cAAc,OAChCC,EAAgBb,SAASY,cAAc,OAE7CD,EAAOG,UAAUC,IAAI,SAAUN,GAC/BI,EAAcC,UAAUC,IAAI,mBAC5BF,EAAcG,iBAAiB,SAAS,KACtCX,KAAKY,YAAY,KAAMZ,KAAKF,iBAC5BE,KAAKD,SAAS,IAGhBO,EAAOO,YAAYL,GACnBF,EAAOO,YAAYX,GAEnBP,SAASmB,KAAKD,YAAYP,EAC5B,CAEAS,WAAWb,EAAME,GACfJ,KAAKC,MAAO,EACZD,KAAKE,KAAOA,EAEZF,KAAKG,OAAOD,EAAME,EACpB,CAEAQ,YAAYV,EAAME,GAChBJ,KAAKC,MAAO,EACZD,KAAKE,KAAO,KAEZF,KAAKG,OAAOD,EAAME,EACpB,GCJF,EAtCA,cAAuC,EACrCP,YAAYC,GACVkB,MAAMlB,EACR,CAEAmB,oBACEjB,KAAKY,YAAY,KAAMZ,KAAKF,gBAC9B,CAEAoB,mBAEE,MAAMC,EAAexB,SAASY,cAAc,OAC5CY,EAAaV,UAAUC,IAAI,kBAG3B,MAAMI,EAAOnB,SAASY,cAAc,OAC9Ba,EAAkBzB,SAASY,cAAc,UAO/Ca,EAAgBX,UAAUC,IAAI,sBAC9BU,EAAgBC,UAAY,oCAC5BD,EAAgBT,iBAAiB,SAAS,IAAMX,KAAKiB,sBAErDH,EAAKL,UAAUC,IAAI,gBACnBI,EAAKO,UAXe,6NAYpBP,EAAKD,YAAYO,GAGjBD,EAAaN,YAAYC,GAEzBd,KAAKe,WAAWI,EAAcnB,KAAKF,gBACrC,GCrCF,IAAewB,ECWA3B,SAASC,cAAc,WACfD,SAASC,cAAc,ODZ/B0B,ECcfC,iBAiBmC,IAAI,EACnC,gCAGuBL,kBAC3B,EDnC8B,YAAxBvB,SAAS6B,WACXF,IAEA3B,SAASgB,iBAAiB,mBAAoBW,E","sources":["webpack://bsi-web-client/./src/js/live-price.js","webpack://bsi-web-client/./src/js/dialogs/dialog.js","webpack://bsi-web-client/./src/js/dialogs/dream-concert-poster-dialog.js","webpack://bsi-web-client/./src/js/helpers.js","webpack://bsi-web-client/./src/js/index.js"],"sourcesContent":["const navbarPriceData = document.querySelector('.navbar__price-data');\r\nconst navbarPriceChange = document.querySelector('.navbar__price-change');\r\nconst navbarPriceTime = document.querySelector('.navbar__price-time');\r\n\r\nasync function fetchLatestPrice() {\r\n  const baseUrl = '/api/v1';\r\n\r\n  const data = await fetch(`${baseUrl}/price`).then((res) => res.json());\r\n\r\n  return data;\r\n}\r\n\r\nasync function updatePriceData(data) {\r\n  // const data = await fetchLatestPrice();\r\n  const priceText = `$${data.price}`;\r\n  const changeText = `${data.change24Hr > 0 ? '+' : ''}${\r\n    Math.round(data.change24Hr * 100) / 100\r\n  }%`;\r\n  const timeText = new Date(data.lastUpdatedAt).toLocaleString();\r\n\r\n  navbarPriceData.textContent = priceText;\r\n  navbarPriceChange.textContent = changeText;\r\n  navbarPriceTime.textContent = timeText;\r\n\r\n  // Toggle 24 hour change text color.\r\n  if (data.change24Hr > 0) {\r\n    navbarPriceChange.classList.add('navbar__price-change--up');\r\n    navbarPriceChange.classList.remove('navbar__price-change--down');\r\n  } else {\r\n    navbarPriceChange.classList.add('navbar__price-change--down');\r\n    navbarPriceChange.classList.remove('navbar__price-change--up');\r\n  }\r\n}\r\n\r\nfunction fetchPriceOnInterval(delay) {\r\n  setInterval(async () => {\r\n    const data = await fetchLatestPrice(data);\r\n\r\n    updatePriceData(data);\r\n  }, delay);\r\n}\r\n\r\nexport { fetchLatestPrice, fetchPriceOnInterval, updatePriceData };\r\n","class Dialog {\r\n  constructor(dialogClassName = 'dialog', cleanFn = () => {}) {\r\n    this.show = false;\r\n    this.node = null; // Full node.\r\n    this.dialogClassName = dialogClassName;\r\n    this.cleanFn = cleanFn;\r\n  }\r\n\r\n  render(node, dialogClass = 'dialog') {\r\n    if (!this.show) {\r\n      const dialog = document.querySelector(`.${dialogClass}`);\r\n      dialog.remove();\r\n\r\n      return undefined;\r\n    }\r\n\r\n    const dialog = document.createElement('div');\r\n    const dialogOverlay = document.createElement('div');\r\n\r\n    dialog.classList.add('dialog', dialogClass);\r\n    dialogOverlay.classList.add('dialog__overlay');\r\n    dialogOverlay.addEventListener('click', () => {\r\n      this.closeDialog(null, this.dialogClassName);\r\n      this.cleanFn();\r\n    });\r\n\r\n    dialog.appendChild(dialogOverlay);\r\n    dialog.appendChild(node);\r\n\r\n    document.body.appendChild(dialog);\r\n  }\r\n\r\n  showDialog(node, dialogClass) {\r\n    this.show = true;\r\n    this.node = node;\r\n\r\n    this.render(node, dialogClass);\r\n  }\r\n\r\n  closeDialog(node, dialogClass) {\r\n    this.show = false;\r\n    this.node = null;\r\n\r\n    this.render(node, dialogClass);\r\n  }\r\n}\r\n\r\nexport default Dialog;\r\n","import Dialog from './dialog.js';\n\nclass DreamConcertPosterDialog extends Dialog {\n  constructor(dialogClassName) {\n    super(dialogClassName);\n  }\n\n  closePosterDialog() {\n    this.closeDialog(null, this.dialogClassName);\n  }\n\n  showPosterDialog() {\n    // Dialog window.\n    const dialogWindow = document.createElement('div');\n    dialogWindow.classList.add('dialog__window');\n\n    // Dialog body.\n    const body = document.createElement('div');\n    const bodyCloseButton = document.createElement('button');\n    const bodyContent = `\n      <a href=\"/en/bsi-dream-concert-event\" target=\"_blank\" rel=\"noreferrer\">\n        <img src=\"/img/dream-concert-poster.png\" alt=\"29th Dream Concert with Digifinex\" class=\"dialog__body-poster\" />\n      </a>\n    `;\n\n    bodyCloseButton.classList.add('dialog__body-close');\n    bodyCloseButton.innerHTML = '<i class=\"fa-solid fa-xmark\"></i>';\n    bodyCloseButton.addEventListener('click', () => this.closePosterDialog());\n\n    body.classList.add('dialog__body');\n    body.innerHTML = bodyContent;\n    body.appendChild(bodyCloseButton);\n\n    // Show dialog.\n    dialogWindow.appendChild(body);\n\n    this.showDialog(dialogWindow, this.dialogClassName);\n  }\n}\n\nexport default DreamConcertPosterDialog;\n","function ready(fn) {\r\n  if (document.readyState !== 'loading') {\r\n    fn();\r\n  } else {\r\n    document.addEventListener('DOMContentLoaded', fn);\r\n  }\r\n}\r\n\r\nfunction throttle(fn, delay) {\r\n  let prev = Date.now();\r\n\r\n  return function throttleFunction() {\r\n    const now = Date.now();\r\n\r\n    if (now - prev > delay) {\r\n      fn();\r\n\r\n      prev = now;\r\n    }\r\n  };\r\n}\r\n\r\nexport { ready, throttle };\r\n","import { ready } from './helpers.js';\nimport ScrollControl from './scroll-control.js';\nimport { navbarScroll, floatingButtonScroll } from './scroll-behaviors.js';\nimport {\n  fetchLatestPrice,\n  updatePriceData,\n  fetchPriceOnInterval,\n} from './live-price.js';\n// import startSocket from './socket.js';\nimport DreamConcertPosterDialog from './dialogs/dream-concert-poster-dialog.js';\n\nconst navbar = document.querySelector('.navbar');\nconst floatingButton = document.querySelector('.fb');\n\nasync function start() {\n  // Scroll feature.\n  // const scroll = new ScrollControl([\n  //   navbarScroll(navbar),\n  //   floatingButtonScroll(floatingButton),\n  // ]);\n\n  // Live price feature.\n  // const data = await fetchLatestPrice();\n  // const delay = 120000;\n  // await updatePriceData(data);\n  // fetchPriceOnInterval(delay);\n\n  // Socket will be disabled on Demo server, or Cyclic.sh server.\n  // startSocket();\n\n  // Dream Concert poster popup.\n  const dreamConcertPosterDialog = new DreamConcertPosterDialog(\n    'dialog--dream-concert-poster',\n  );\n\n  dreamConcertPosterDialog.showPosterDialog();\n}\n\nready(start);\n"],"names":["document","querySelector","constructor","dialogClassName","cleanFn","this","show","node","render","dialogClass","remove","dialog","createElement","dialogOverlay","classList","add","addEventListener","closeDialog","appendChild","body","showDialog","super","closePosterDialog","showPosterDialog","dialogWindow","bodyCloseButton","innerHTML","fn","async","readyState"],"sourceRoot":""}