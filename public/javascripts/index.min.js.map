{"version":3,"file":"index.min.js","mappings":"mBAAA,IAAeA,ECASC,SAASC,cAAc,uBACrBD,SAASC,cAAc,yBACzBD,SAASC,cAAc,uBCShCD,SAASC,cAAc,WACfD,SAASC,cAAc,OFZ/BF,EEcfG,iBAsBA,EFnC8B,YAAxBF,SAASG,WACXJ,IAEAC,SAASI,iBAAiB,mBAAoBL,E","sources":["webpack://bsi-web-client/./src/js/helpers.js","webpack://bsi-web-client/./src/js/live-price.js","webpack://bsi-web-client/./src/js/pages/index.js"],"sourcesContent":["function ready(fn) {\r\n  if (document.readyState !== 'loading') {\r\n    fn();\r\n  } else {\r\n    document.addEventListener('DOMContentLoaded', fn);\r\n  }\r\n}\r\n\r\nfunction throttle(fn, delay) {\r\n  let prev = Date.now();\r\n\r\n  return function throttleFunction() {\r\n    const now = Date.now();\r\n\r\n    if (now - prev > delay) {\r\n      fn();\r\n\r\n      prev = now;\r\n    }\r\n  };\r\n}\r\n\r\nasync function promiseResolver(promise) {\r\n  try {\r\n    const data = await promise;\r\n    return [data, null];\r\n  } catch (err) {\r\n    return [null, err];\r\n  }\r\n}\r\n\r\nexport { ready, throttle, promiseResolver };\r\n","const navbarPriceData = document.querySelector('.navbar__price-data');\r\nconst navbarPriceChange = document.querySelector('.navbar__price-change');\r\nconst navbarPriceTime = document.querySelector('.navbar__price-time');\r\n\r\nasync function fetchLatestPrice() {\r\n  const baseUrl = '/api/v1';\r\n\r\n  const data = await fetch(`${baseUrl}/price`).then((res) => res.json());\r\n\r\n  return data;\r\n}\r\n\r\nasync function updatePriceData(data) {\r\n  // const data = await fetchLatestPrice();\r\n  const priceText = `$${data.price}`;\r\n  const changeText = `${data.change24Hr > 0 ? '+' : ''}${\r\n    Math.round(data.change24Hr * 100) / 100\r\n  }%`;\r\n  const timeText = new Date(data.lastUpdatedAt).toLocaleString();\r\n\r\n  navbarPriceData.textContent = priceText;\r\n  navbarPriceChange.textContent = changeText;\r\n  navbarPriceTime.textContent = timeText;\r\n\r\n  // Toggle 24 hour change text color.\r\n  if (data.change24Hr > 0) {\r\n    navbarPriceChange.classList.add('navbar__price-change--up');\r\n    navbarPriceChange.classList.remove('navbar__price-change--down');\r\n  } else {\r\n    navbarPriceChange.classList.add('navbar__price-change--down');\r\n    navbarPriceChange.classList.remove('navbar__price-change--up');\r\n  }\r\n}\r\n\r\nfunction fetchPriceOnInterval(delay) {\r\n  setInterval(async () => {\r\n    const data = await fetchLatestPrice(data);\r\n\r\n    updatePriceData(data);\r\n  }, delay);\r\n}\r\n\r\nexport { fetchLatestPrice, fetchPriceOnInterval, updatePriceData };\r\n","import { ready } from 'helpers.js';\r\nimport ScrollControl from 'scroll-control.js';\r\nimport { navbarScroll, floatingButtonScroll } from 'scroll-behaviors.js';\r\nimport {\r\n  fetchLatestPrice,\r\n  updatePriceData,\r\n  fetchPriceOnInterval,\r\n} from 'live-price.js';\r\n// import startSocket from './socket.js';\r\nimport DreamConcertPosterDialog from 'dialogs/dream-concert-poster-dialog.js';\r\n\r\nconst navbar = document.querySelector('.navbar');\r\nconst floatingButton = document.querySelector('.fb');\r\n\r\nasync function start() {\r\n  // Scroll feature.\r\n  // const scroll = new ScrollControl([\r\n  //   navbarScroll(navbar),\r\n  //   floatingButtonScroll(floatingButton),\r\n  // ]);\r\n  // Live price feature.\r\n  // const data = await fetchLatestPrice();\r\n  // const delay = 120000;\r\n  // await updatePriceData(data);\r\n  // fetchPriceOnInterval(delay);\r\n  // Socket will be disabled on Demo server, or Cyclic.sh server.\r\n  // startSocket();\r\n  // // Dream Concert poster popup.\r\n  // // Only show in home page.\r\n  // const homePathPattern = /^\\/\\w{2}\\/home$/;\r\n  // if (window.location.pathname.match(homePathPattern)) {\r\n  //   const dreamConcertPosterDialog = new DreamConcertPosterDialog(\r\n  //     'dialog--dream-concert-poster',\r\n  //   );\r\n  //   dreamConcertPosterDialog.showPosterDialog();\r\n  // }\r\n}\r\n\r\nready(start);\r\n"],"names":["fn","document","querySelector","async","readyState","addEventListener"],"sourceRoot":""}